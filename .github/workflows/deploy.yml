name: Deploy to Railway

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '18'

jobs:
  deploy-validation:
    name: Pre-Deployment Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run full CI/CD pipeline
        run: npm run ci:full

      - name: Validate deployment assets
        run: |
          echo "üîç Validating deployment readiness..."

          # Check that we have a production build
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Production build missing"
            exit 1
          fi

          # Verify Railway configuration
          if [ ! -f "railway.toml" ]; then
            echo "‚ùå Railway configuration missing"
            exit 1
          fi

          echo "‚úÖ Deployment validation passed"

      - name: Generate deployment report
        run: |
          echo "üìã Deployment Report" >> deployment-report.md
          echo "===================" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "**Branch**: ${{ github.ref_name }}" >> deployment-report.md
          echo "**Commit**: ${{ github.sha }}" >> deployment-report.md
          echo "**Node.js**: $(node --version)" >> deployment-report.md
          echo "**Build Size**: $(du -sh dist/ | cut -f1)" >> deployment-report.md
          echo "**Canvas Assets**: Available via Backblaze B2 CDN" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "**CI/CD Status**: ‚úÖ All checks passed" >> deployment-report.md
          echo "**Railway Status**: üöÄ Ready for deployment" >> deployment-report.md

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-${{ github.sha }}
          path: |
            dist/
            deployment-report.md
            railway.toml
          retention-days: 30

  railway-deploy:
    name: Railway Deployment
    runs-on: ubuntu-latest
    needs: deploy-validation
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "üöÄ Deploying to Railway..."
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"

          # Deploy using Railway CLI with service name
          railway up --detach --service joshify

          echo "‚úÖ Deployment initiated successfully"

          # Wait a moment for deployment to register
          sleep 10

          # Get deployment status
          railway status || echo "‚ö†Ô∏è  Status check skipped"

      - name: Post-deployment validation
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "üîç Running post-deployment validation..."

          # Get the Railway app URL (this would need to be configured)
          # RAILWAY_URL=$(railway domain | head -n1 || echo "")

          # For now, we'll just verify the deployment was created
          echo "‚úÖ Deployment completed for commit ${{ github.sha }}"
          echo "üìù Check Railway dashboard for deployment status"

  notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-validation, railway-deploy]
    if: always()

    steps:
      - name: Deployment success notification
        if: needs.railway-deploy.result == 'success'
        run: |
          echo "üéâ Deployment Success!"
          echo "Commit ${{ github.sha }} has been deployed to Railway"
          echo "Canvas videos are available via Backblaze B2 CDN"

      - name: Deployment failure notification
        if: needs.railway-deploy.result == 'failure'
        run: |
          echo "‚ùå Deployment Failed!"
          echo "Commit ${{ github.sha }} deployment to Railway failed"
          echo "Check the deployment logs for details"
          exit 1