name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Validate deployment assets
        run: |
          echo "🔍 Validating deployment readiness..."

          # Check that we have a production build
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Production build missing"
            exit 1
          fi

          # Verify Railway configuration
          if [ ! -f "railway.toml" ]; then
            echo "❌ Railway configuration missing"
            exit 1
          fi

          echo "✅ Deployment validation passed"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 30

  pr-validation:
    name: PR Validation Complete
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-test]
    if: github.event_name == 'pull_request'

    steps:
      - name: PR validation summary
        run: |
          echo "✅ Code Quality: ESLint and TypeScript checks passed"
          echo "✅ Build Status: Production build successful"
          echo "🎯 PR ready for review and merge"
          echo ""
          echo "📝 Note: Deployment occurs automatically on merge to main"
          echo "🚀 Merge this PR to trigger Railway deployment"

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-test]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint-and-type-check.result }}" != "success" ]]; then
            echo "❌ Lint and type check failed"
            exit 1
          fi
          if [[ "${{ needs.build-test.result }}" != "success" ]]; then
            echo "❌ Build test failed"
            exit 1
          fi
          echo "✅ All quality checks passed!"
